{"version":3,"sources":["webpack:///./src/routes/demos/sometest/index.tsx"],"names":["SomeTest","text","setText","divRef","onFocus","window","innerWidth","document","body","clientHeight","el","current","addEventListener","removeEventListener","contentEditable","ref"],"mappings":"+HAAA,8DAEe,SAASA,IAEpB,MAAOC,EAAKC,GAAW,WAAe,IAEhCC,EAAS,SAAa,MAa5B,OAXA,YAAgB,KACZ,MAAMC,EAAU,KACZF,wBAA8BG,OAAOC,4CAA4CC,SAASC,KAAKC,qBAE7FC,EAAKP,EAAOQ,QAElB,OADAD,EAAGE,iBAAiB,QAAQR,GACrB,KACHM,EAAGG,oBAAoB,QAAST,KAEtC,IAEK,2BACH,2B,SAAYH,GACZ,2BACI,wBAAMa,iBAAe,EAACC,IAAKZ,GAAM","file":"15.7c1e342e362d43fdd89a.js","sourcesContent":["import * as React from \"react\"\n\nexport default function SomeTest(){\n\n    const [text,setText] = React.useState(\"\")\n\n    const divRef = React.useRef(null)\n\n    React.useEffect(()=>{\n        const onFocus = ()=>{\n            setText(`window.innerWidth: ${window.innerWidth}\\n document.body.clientHeight: ${document.body.clientHeight} \\n `)\n        }\n        const el = divRef.current as HTMLDivElement\n        el.addEventListener(\"focus\",onFocus)\n        return ()=>{\n            el.removeEventListener(\"focus\", onFocus)\n        }\n    },[])\n\n    return <div>\n        <pre>Info: {text}</pre>\n        <pre >\n            <code contentEditable ref={divRef}>\n                114514\n            </code>\n        </pre>\n    </div>\n}"],"sourceRoot":""}