{"version":3,"sources":["webpack:///./src/routes/article/article-list.tsx","webpack:///./src/routes/index.tsx"],"names":["renderArticles","articles","articleList","path","Object","keys","sort","t1","t2","stat1","stat2","order1","modifyTime","order2","match","Number","MAX_SAFE_INTEGER","split","map","title","maybeChildren","key","href","concat","join","replace"],"mappings":"8HAAA,kFAiBO,SAASA,EAAeC,EAAqBC,YAAaC,EAAiB,IAC9E,OACI,0BACKC,OAAOC,KAAKJ,GACRK,KAAK,CAACC,EAAIC,KACP,IAAIC,EAAQR,EAASM,GACjBG,EAAQT,EAASO,GACjBG,EAAWF,EAAMG,YAAc,EAC/BC,EAAWH,EAAME,YAAc,EAOnC,OANGL,EAAGO,MAAM,WACRH,EAASI,OAAOC,iBAAmBD,OAAOR,EAAGU,MAAM,KAAK,KAEzDT,EAAGM,MAAM,WACRD,EAASE,OAAOC,iBAAmBD,OAAOP,EAAGS,MAAM,KAAK,KAErDJ,EAASF,IAEnBO,IAAIC,IACD,MAAMC,EAAgBnB,EAASkB,GAC/B,OACI,sBAAIE,IAAKF,GACF,eAAgBC,EAMf,gCACI,gBAAC,IAAM,CAACE,KAAM,oBAAsBnB,EAAKoB,OAAOJ,GAAOK,KAAK,MAAOL,EAAMM,QAAQ,MAAO,MAN5F,gCACI,6BAAQN,GACR,0B,IAAMnB,EAAeoB,EAA2BjB,EAAKoB,OAAOJ,Y,sDCzChG,sGAIe,qBACX,OAAO,gCACH,+BACI,iCACA,gGAEJ,+BACI,kCACA,2BAEQ,gBAIZ,+BACI,iCACA,2BACI,0BACI,0BACI,0BACI,gBAAC,IAAM,CAACG,KAAK,kDAAgD,gBAEjE,2BACI,0BACI,8EACA,gJAIZ,0BACI,0BACI,gBAAC,IAAM,CAACA,KAAK,wCAAsC,qCAEvD,2BACI,0BACI,6FACA,iEACA,sKAIZ,0BACI,0BACI,qBAAGA,KAAK,oDAAkD,cAE9D,+EACA,gBAAC,IAAM,CAACA,KAAK,qBAAmB,SAEpC,0BACI,0BACI,qBAAGA,KAAK,iEAA+D,8BAI3E,wEAEJ,0BACI,0BACI,gBAAC,IAAM,CAACA,KAAK,yBAAuB,cAExC,6DAKhB,+BACI,uCACA,0BACI,0BACI,0BACI,gBAAC,IAAM,CAACA,KAAK,6CAA2C,SAE5D,wDAEJ,0BACI,0BACI,gBAAC,IAAM,CAACA,KAAK,sBAAoB,WAErC,sCAEJ,0BACI,0BACI,gBAAC,IAAM,CAACA,KAAK,iBAAe,aAEhC","file":"8.9fb78953c9ec21bb19cc.js","sourcesContent":["import * as React from \"react\"\nimport { Anchor } from \"../../services/router\"\nimport * as moment from \"moment\"\n\ntype ArticleStat = {\n    modifyTime: number\n    createTime: number\n}\n\ntype Articles = {\n    [name: string]: ArticleStat | Articles\n}\n\ndeclare global {\n    const articleList: Articles //article list generated by plugin\n}\n\nexport function renderArticles(articles: Articles = articleList, path: string[] = []) {\n    return (\n        <ul>\n            {Object.keys(articles)\n                .sort((t1, t2) => {\n                    let stat1 = articles[t1]\n                    let stat2 = articles[t2]\n                    let order1 = ((stat1.modifyTime || 0) as number)\n                    let order2 = ((stat2.modifyTime || 0) as number)\n                    if(t1.match(/\\d+\\./)){\n                        order1 = Number.MAX_SAFE_INTEGER - Number(t1.split(\".\")[0])\n                    }\n                    if(t2.match(/\\d+\\./)){\n                        order2 = Number.MAX_SAFE_INTEGER - Number(t2.split(\".\")[0])\n                    }\n                    return order2 - order1\n                })\n                .map(title => {\n                    const maybeChildren = articles[title]\n                    return (\n                        <li key={title}>\n                            {!(\"modifyTime\" in maybeChildren) ? (\n                                <>\n                                    <label>{title}</label>\n                                    <ul> {renderArticles(maybeChildren as Articles, path.concat(title))}</ul>\n                                </>\n                            ) : (\n                                <>\n                                    <Anchor href={\"/article?article=\" + path.concat(title).join(\"/\")}>{title.replace(\".md\", \"\")}</Anchor>\n                                    {\n                                        // <span style={{float:\"left\", fontSize:\".5em\", opacity: .5, marginRight: \"2em\", lineHeight: \"2.8em\" }}>{moment.unix((maybeChildren as ArticleStat).createTime / 1000).format(\"YY/MM/DD\")}</span>\n                                    }\n                                </>\n                            )}\n                        </li>\n                    )\n                })}\n        </ul>\n    )\n}\n","import * as React from \"react\"\nimport { Anchor } from \"../services/router\";\nimport { renderArticles } from \"./article/article-list\";\n\nexport default function (){\n    return <>\n        <section>\n            <h2>关于我</h2>\n            <p>宅宅, 懒癌, 运动白痴, 社交障碍, 三分钟热度, 不会骑自行车, 器用贫乏, 程序员. 喜欢摸🐱🐱, 喜欢P社4萌, 怪猎.</p>\n        </section>\n        <section>\n            <h2>一些想法</h2>\n            <div>\n                {\n                    renderArticles()\n                }\n            </div>\n        </section>\n        <section>\n            <h2>一些库</h2>\n            <div>\n                <ul>\n                    <li>\n                        <h3>\n                            <Anchor href=\"https://github.com/buhichan/react-typed-router\">React的强类型路由</Anchor>\n                        </h3>\n                        <div>\n                            <ol>\n                                <li>从Page组件的参数推导出pushHistory所需传的url参数的接口类型, 避免错传漏传参数</li>\n                                <li>我希望强类型能覆盖前端开发的方方面面, 包括路由, react-router等路由库, 其参数的正确性仅仅是基于开发的自觉, 如果采用了typescript, 我们可以改善这一点, 这里没有直接用react-router.</li>\n                            </ol>\n                        </div>\n                    </li>\n                    <li>\n                        <h3>\n                            <Anchor href=\"https://github.com/buhichan/rehooker\">用react-hook和rxjs和typescript的状态管理</Anchor>\n                        </h3>\n                        <div>\n                            <ol>\n                                <li>对typescript的支持友好, store本身和store的slice的类型都能被ts推导出来, 如果用ts的话比较方便;</li>\n                                <li>用了rxjs, 所以中间件就是现成的rxjs操作符, 用法简单暴力无脑</li>\n                                <li>轮子本身代码量很少, 主要是展示这个想法, 也就是用函数代替字符串的action, 当然这么做有利有弊, 利在于更清晰的代码条理(不需要搜action的type来搜reducer逻辑了), 更少的模式代码, 弊端是性能下降, 丧失了redux-devtool的支持.</li>\n                            </ol>\n                        </div>\n                    </li>\n                    <li>\n                        <h3>\n                            <a href=\"https://github.com/buhichan/rehooker-schema-form\">React动态表单</a>\n                        </h3>\n                        <p>JSON表单, 支持表单项之间动态复杂的依赖关系, 这类型的轮子太多了, 不少这一个, 不多这一个.</p>\n                        <Anchor href=\"/schema-form-demo\">demo</Anchor>\n                    </li>\n                    <li>\n                        <h3>  \n                            <a href=\"https://github.com/buhichan/graphql-mongoose-service-template\">\n                             Graphql+Mongodb的CRUD后端生成器\n                            </a>\n                        </h3>\n                        <p>用来快速完成简单的业务系统, 或者是快速构建原型, 或者是用来做mockup服务器.</p>\n                    </li>\n                    <li>\n                        <h3>  \n                            <Anchor href=\"/virtual-scroll-demo/\">无限滚动虚拟化列表</Anchor>\n                        </h3>\n                        <p>无限滚动虚拟化跟asyncIterator是同一个模型.</p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n        <section>\n            <h2>Demoscene</h2>\n            <ul>\n                <li>\n                    <h3>  \n                        <Anchor href=\"/fractal/webgl2-renderer?shader=julia-set\">朱利亚集</Anchor>\n                    </h3>\n                    <p>Generative Art的hello world</p>\n                </li>\n                <li>\n                    <h3>  \n                        <Anchor href=\"/moonphase-painter\">月球文翻译器</Anchor>\n                    </h3>\n                    <p>一个月球文翻译器</p>\n                </li>\n                <li>\n                    <h3>  \n                        <Anchor href=\"/emoji-player\">Emoji播放器</Anchor>\n                    </h3>\n                    <p>一个使用Emoji来当作像素的视频播放器</p>\n                </li>\n            </ul>\n        </section>\n    </>\n}\n\n\nclass Foo {\n    lock\n    isDirty(){\n        this.lock.lock()\n        //.......\n        let res = 1===1\n        this.lock.release()\n        return res\n    }\n    update(){\n        this.lock.lock()\n        //.......\n        if(this.isDirty()){\n            //......\n        }\n        //.......\n        this.lock.release()\n    }\n}"],"sourceRoot":""}