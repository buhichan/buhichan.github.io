(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"./src/routes/fractal/segments.tsx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return a});var r=n("react");const l=()=>[[.4*Math.random(),.4*Math.random()],[.4*Math.random()+.2,.4*Math.random()],[.4*Math.random()+.4,.4*Math.random()],[.4*Math.random()+.8,.4*Math.random()]];function a(){const e=r.useRef(null),[t,n]=r.useState(l),[a,m]=r.useState(3),[s,h]=r.useState(6);return r.useEffect(()=>{if(e.current){const{width:n,height:r}=e.current.parentElement.getBoundingClientRect(),l=Math.min(n,r);if(e.current.height=2*l,e.current.width=2*l,a<3)return;if(s<0)return;const m=function(e,t){return function n(r,l=t){if(0===l)return r;let a=[],m=0;for(;m<r.length-1;){a.push(r[m]);let t=r[m],n=r[m+1];for(let r=0;r<e.length;r++){let[l,m]=e[r];a.push(u(o(n),e=>{const t=[-e[1],e[0]];return c(i(l)(e))(i(m)(t))},c(t))(t))}m+=1}return a.push(r[r.length-1]),n(a,l-1)}}(t,s),h=new Array(a).fill(0).map((e,t)=>[Math.cos(2*Math.PI/a*t)*l/2,Math.sin(2*Math.PI/a*t)*l/2]),d=h.reduce((e,t,n)=>[...e,...m([h[n],n===h.length-1?h[0]:h[n+1]])],[]),f=e.current.getContext("2d");if(f){f.clearRect(0,0,window.innerWidth,window.innerHeight),f.beginPath(),f.translate(l,l),f.strokeStyle="#000",f.moveTo(...d[0]);for(let e of d)f.lineTo(...e);f.stroke()}}},[s,a,t]),r.createElement("div",null,r.createElement("h2",null,"简单的线段分形"),r.createElement("canvas",{onClick:()=>{n(l())},ref:e,style:{width:"100%",height:"100%"}}),r.createElement("div",null,r.createElement("p",null,"简单的线段分形, 从一个正多边形派生出的分形.")),r.createElement("div",null,r.createElement("label",null,"起始图像边数"),r.createElement("input",{type:"number",min:3,step:1,value:a,onChange:e=>m(+e.currentTarget.value)})),r.createElement("div",null,r.createElement("label",null,"循环次数"),r.createElement("input",{type:"number",min:0,step:1,value:s,onChange:e=>h(+e.currentTarget.value)}),r.createElement("p",{style:{color:"#999"}},"注意: 分形是由你的浏览器计算的, 所以如果循环次数太高你的浏览器会很卡")),r.createElement("div",null,r.createElement("div",null,"种子:"),t.map((e,l)=>r.createElement("div",{key:l},r.createElement("div",null,r.createElement("label",null,"x"),r.createElement("input",{style:{width:200},value:e[0],type:"number",min:-1,max:1,step:.1,onChange:e=>{const r=t.slice();r[l]=r[l].slice(),r[l][0]=Number(e.currentTarget.value),n(r)}})),r.createElement("div",null,r.createElement("label",null,"y"),r.createElement("input",{style:{width:200},value:e[1],type:"number",min:-1,max:1,step:.1,onChange:e=>{const r=t.slice();r[l]=r[l].slice(),r[l][1]=Number(e.currentTarget.value),n(r)}}))))))}function u(...e){return t=>e.reduce((e,t)=>t(e),t)}function c(e){return t=>[t[0]+e[0],t[1]+e[1]]}function i(e){return t=>[t[0]*e,t[1]*e]}function o(e){return t=>[e[0]-t[0],e[1]-t[1]]}}}]);
//# sourceMappingURL=16.d55850b4e1a1dc50fac6.js.map