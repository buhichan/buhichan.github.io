{"version":3,"sources":["webpack:///./node_modules/react-infinite-virtual-scroll/build/index.js","webpack:///./src/routes/demos/virtual-scroll-demo/index.tsx"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","React","MAX_LOOP_COUNT","default","props","_a","useState","undefined","rerender","state","useMemo","iterator","dataSource","data","heightMap","start","end","topSpace","bottomSpace","done","useLayoutEffect","viewPort","viewPortRef","current","loading","loadMore","next","then","concat","onScroll","e","shouldRerender","container","parentElement","lastChild","firstChild","getHiddenElementHeight","index","res","console","error","setHiddenElementHeight","height","loopCount","scrollTop","Math","max","scrollHeight","clientHeight","previousElementSibling","nextElementSibling","Error","addEventListener","parentNode","removeEventListener","useRef","createElement","style","overflow","WebkitOverflowScrolling","ref","marginTop","marginBottom","children","slice","page","log","Array","fill","map","_","id","random","name","x","key","toFixed"],"mappings":"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","file":"10.5b7483f21fb39d9cfc32.js","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar MAX_LOOP_COUNT = 10000;\n//AIV stands for async iterator virtualization\nfunction InfiniteVirtualScroll(props) {\n    var _a = React.useState(undefined), _ = _a[0], rerender = _a[1];\n    var state = React.useMemo(function () {\n        return {\n            iterator: props.dataSource(),\n            data: [],\n            heightMap: {},\n            start: 0,\n            end: 0,\n            topSpace: 0,\n            bottomSpace: 0,\n            done: false\n        };\n    }, [props.dataSource]);\n    React.useLayoutEffect(function () {\n        var viewPort = viewPortRef.current;\n        var loading = false;\n        var loadMore = function () {\n            if (loading) {\n                return;\n            }\n            loading = true;\n            state.iterator.next().then(function (value) {\n                loading = false;\n                if (!value.done && !!viewPort) {\n                    state.end += value.value.length;\n                    state.bottomSpace = 0;\n                    state.data = state.data.concat(value.value);\n                    rerender({});\n                }\n            });\n        };\n        function onScroll(e) {\n            if (viewPort) {\n                var shouldRerender = false;\n                var container = viewPort.parentElement;\n                var lastChild = viewPort.lastChild;\n                var firstChild = viewPort.firstChild;\n                var getHiddenElementHeight = function (index) {\n                    var res = state.heightMap[index];\n                    if (!res) {\n                        console.error(\"Failed to get height of hidden element\");\n                    }\n                    return res || 0;\n                };\n                var setHiddenElementHeight = function (index, height) {\n                    state.heightMap[index] = height;\n                };\n                var loopCount = 0;\n                // scrollTop must be clamped since in some browser it may drop below zero\n                var scrollTop = Math.max(0, container.scrollTop);\n                while (scrollTop < state.topSpace && loopCount++ < MAX_LOOP_COUNT) {\n                    //scroll to top, -start\n                    // console.log(\"head in\")\n                    if (state.start > 0) {\n                        state.start -= 1;\n                        state.topSpace -= getHiddenElementHeight(state.start);\n                        shouldRerender = true;\n                    }\n                }\n                while (lastChild && container.scrollHeight - container.clientHeight - scrollTop > state.bottomSpace + lastChild.clientHeight && loopCount++ < MAX_LOOP_COUNT) {\n                    //scroll to top, -end\n                    // console.log(\"tail out\")\n                    setHiddenElementHeight(state.end - 1, lastChild.clientHeight);\n                    state.bottomSpace += lastChild.clientHeight;\n                    state.end -= 1;\n                    lastChild = lastChild.previousElementSibling;\n                    shouldRerender = true;\n                }\n                while (firstChild && scrollTop > state.topSpace + firstChild.clientHeight && loopCount++ < MAX_LOOP_COUNT) {\n                    //scroll to bottom, +start\n                    // console.log(\"head out\")\n                    setHiddenElementHeight(state.start, firstChild.clientHeight);\n                    state.topSpace += firstChild.clientHeight;\n                    state.start += 1;\n                    firstChild = firstChild.nextElementSibling;\n                    shouldRerender = true;\n                }\n                while (container.scrollHeight - container.clientHeight - scrollTop < state.bottomSpace && loopCount++ < MAX_LOOP_COUNT) {\n                    //scroll to bottom, +end\n                    if (state.end < state.data.length) {\n                        // console.log(\"tail in\")\n                        state.bottomSpace -= getHiddenElementHeight(state.end);\n                        state.end += 1;\n                        shouldRerender = true;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                if (state.end >= state.data.length) {\n                    loadMore();\n                }\n                if (loopCount > MAX_LOOP_COUNT) {\n                    throw new Error(\"Loop count exceeded, it's a bug, please file an issue\");\n                }\n                shouldRerender && rerender({});\n            }\n        }\n        viewPort && viewPort.parentElement && viewPort.parentElement.addEventListener(\"scroll\", onScroll);\n        if (viewPort && viewPort.parentNode && viewPort.clientHeight < viewPort.parentNode.clientHeight) {\n            loadMore();\n        }\n        return function () {\n            viewPort && viewPort.parentElement && viewPort.parentElement.removeEventListener('scroll', onScroll);\n            viewPort = null;\n        };\n    }, [props.dataSource]);\n    var viewPortRef = React.useRef(null);\n    return React.createElement(\"div\", { style: __assign({ overflow: \"auto\", WebkitOverflowScrolling: \"touch\" }, props.style) },\n        React.createElement(\"div\", { ref: viewPortRef, style: {\n                marginTop: state.topSpace,\n                marginBottom: state.bottomSpace,\n            } }, props.children(state.data.slice(state.start, state.end))));\n}\nexports.default = InfiniteVirtualScroll;\n//# sourceMappingURL=index.js.map","import * as React from \"react\"\nimport InfiniteScroll from \"react-infinite-virtual-scroll\"\n\nexport default ()=>{\n    const dataSource = React.useMemo(()=>{\n        return async function *getData(){\n            let total = 1000\n            let page = 0\n            while(page * 20 < total){\n                page ++\n                console.log(\"loadData\")\n                yield new Array(20).fill(0).map((_,i)=>({\n                    id:page * 20 + i,\n                    height: Math.random() * 10 + 20,\n                    name:\"No.\"+ (page * 20 + i)\n                }))\n            }\n        }\n    },[])\n    console.log(InfiniteScroll)\n    return <InfiniteScroll dataSource={dataSource} style={{height:200}}>\n        {\n            data=>{\n                return data.map(x=>{\n                    return <div key={x.id} style={{height:x.height}}>\n                        {`${x.name}(${x.height.toFixed(2)}px height)`}\n                    </div>\n                })\n            }\n        }\n    </InfiniteScroll> \n}"],"sourceRoot":""}