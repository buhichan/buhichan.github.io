import * as React from "react"
import { Anchor } from "../../services/router"
import * as moment from "moment"

type ArticleStat = {
    modifyTime: number
    createTime: number
}

type Articles = {
    [name: string]: ArticleStat | Articles
}

declare global {
    const articleList: Articles //article list generated by plugin
}

export function renderArticles(articles: Articles = articleList, path: string[] = []) {
    return (
        <ul>
            {Object.keys(articles)
                .sort((t1, t2) => {
                    let stat1 = articles[t1]
                    let stat2 = articles[t2]
                    return ((stat2.modifyTime || 0) as number) - ((stat1.modifyTime || 0) as number)
                })
                .map(title => {
                    const maybeChildren = articles[title]
                    return (
                        <li key={title}>
                            {!("modifyTime" in maybeChildren) ? (
                                <>
                                    <label>{title}</label>
                                    <ul> {renderArticles(maybeChildren as Articles, path.concat(title))}</ul>
                                </>
                            ) : (
                                <>
                                    <Anchor href={"/article?article=" + path.concat(title).join("/")}>{title.replace(".md", "")}</Anchor>
                                    {
                                        // <span style={{float:"left", fontSize:".5em", opacity: .5, marginRight: "2em", lineHeight: "2.8em" }}>{moment.unix((maybeChildren as ArticleStat).createTime / 1000).format("YY/MM/DD")}</span>
                                    }
                                </>
                            )}
                        </li>
                    )
                })}
        </ul>
    )
}
