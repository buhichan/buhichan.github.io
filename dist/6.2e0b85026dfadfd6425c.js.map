{"version":3,"sources":["webpack:///./src/routes/fractal/webgl2-renderer.css","webpack:///./src/routes/fractal/shaders lazy ^\\.\\/.*\\.glsl$ namespace object","webpack:///./src/routes/fractal/webgl2-renderer.css?960e","webpack:///./src/services/webgl/program.ts","webpack:///./node_modules/gl-matrix/esm/common.js","webpack:///./node_modules/gl-matrix/esm/mat4.js","webpack:///./node_modules/gl-matrix/esm/vec3.js","webpack:///./src/routes/fractal/webgl2-renderer.tsx","webpack:///./src/services/webgl/buffer.ts","webpack:///./src/services/webgl/shader-chunks/complex.glsl","webpack:///./src/services/webgl/shader-chunks/fbm.glsl","webpack:///./src/services/webgl/shader-chunks/hsl2rgb.glsl","webpack:///./src/services/webgl/shader-chunks/noise.glsl"],"names":["module","exports","push","i","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","content","options","transform","undefined","locals","_gl","document","createElement","getContext","shaderChunks","fbm","default","hsl2rgb","noise","complex","shaderPreprocessor","source","replace","_","name","createShaderError","errLog","matches","match","splitedSource","split","errPos","Number","console","log","slice","join","createWebgl2Program","gl","vsSource","fsSource","attributes","uniforms","program","createProgram","vs","createShader","VERTEX_SHADER","shaderSource","fs","FRAGMENT_SHADER","compileShader","attachShader","getShaderInfoLog","deleteShader","linkProgram","getProgramParameter","LINK_STATUS","lastError","getProgramInfoLog","useProgram","vao","createVertexArray","setUniformByValue","setters","Map","key","value","has","loc","getUniformLocation","setter","Array","isArray","Float32Array","uniform1f","length","uniform4fv","uniform3fv","uniform2fv","uniformMatrix4fv","uniformMatrix3fv","uniform1fv","guessType","set","get","makeUniformSetter","draw","mode","bufferObject","clear","DEPTH_BUFFER_BIT","COLOR_BUFFER_BIT","drawElements","byteLength","UNSIGNED_BYTE","bindVertexArray","init","clearColor","enable","BLEND","CULL_FACE","DEPTH_TEST","cullFace","BACK","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","attr","location","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","size","type","stride","offset","Proxy","_target","deleteProgram","deleteVertexArray","DrawMode","AttrType","LINES","LINE_STRIP","LINE_LOOP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","BYTE","SHORT","UNSIGNED_SHORT","FLOAT","HALF_FLOAT","EPSILON","ARRAY_TYPE","RANDOM","Math","random","PI","create","out","clone","a","copy","fromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","identity","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","multiply","b","b0","b1","b2","b3","translate","v","x","y","z","rotate","rad","axis","s","c","t","b12","b20","b21","b22","len","hypot","sin","cos","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","sqrt","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","target","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","scale","exactEquals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","arguments","mul","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","d","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","tempA","tempB","cosine","acos","zero","vec","ShaderType","div","dist","sqrDist","sqrLen","forEach","count","fn","arg","l","shaders","twod","threed","vertexShader","isMobile","window","innerWidth","HEIGHT","WIDTH","WebglRenderer","props","canvasRef","editorRef","coordinateDisplayRef","fsName","setShaderName","URLSearchParams","search","sub","fromEvent","pipe","debounceTime","subscribe","current","style","scrollY","unsubscribe","fragmentShader","setShader","res","innerText","state","zoom","paused","mouse","error","setError","canvas","subs","shaderConfig","find","shaderType","onwheel","preventDefault","stopPropagation","ctrlKey","offsetX","offsetY","factor","deltaY","deltaX","addEventListener","removeEventListener","onclick","onpointermove","innerHTML","toLocaleString","maximumFractionDigits","minimumFractionDigits","updateMousePosition","onpointerenter","setPointerCapture","pointerId","onpointerleave","releasePointerCapture","glattr","alpha","depth","antialias","premultipliedAlpha","devicePixelRatio","xSegments","ySegments","vboDataStride","vboData","j","eboData","index","Uint8Array","rowSize","rowCount","makePlaneGeometryEBO","projectionMatrix","cameraPosition","cameraUp","viewMatrix","modelMatrix","result","bo","vbo","createBuffer","elementArrayBuffer","unbind","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","createWebgl2BufferObject","position","float","BYTES_PER_ELEMENT","uv","resolution","time","params","lastRenderTime","totalPauseTime","bind","isFirstLoop","animeHandle","requestAnimationFrame","loop","timeValue","buf","readPixels","RGBA","cancelAnimationFrame","dispose","magicNumberState","setMagicNumberState","onChange","shader","newURL","URL","href","history","pushState","title","display","defaultChecked","marginRight","String","step","currentTarget","valueAsNumber","ref","color","message","contentEditable","onFocus","onInput","clearTimeout","setTimeout","width","height","transition"],"mappings":"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","file":"6.2e0b85026dfadfd6425c.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"\\n\\n#canvas-left {\\n    width: calc(100% - var(--canvas-width));\\n    display: inline-block;\\n    padding: 0 18px;\\n}\\n#canvas-right {\\n    vertical-align: top;\\n    position: relative;\\n    display: inline-block;\\n    width: var(--canvas-width);\\n    height: var(--canvas-width);\\n}\\n\\n@media (max-width: 1068px){\\n    #canvas-left {\\n        width:100%;\\n    }\\n    #canvas-right {\\n        display: flex;\\n        width: 100%;\\n        height: 100%;\\n        justify-content: center;\\n        align-items: center;\\n    }\\n}\", \"\"]);\n\n","var map = {\n\t\"./burning-ship.glsl\": [\n\t\t\"./src/routes/fractal/shaders/burning-ship.glsl\",\n\t\t18\n\t],\n\t\"./candle-flame.glsl\": [\n\t\t\"./src/routes/fractal/shaders/candle-flame.glsl\",\n\t\t19\n\t],\n\t\"./julia-and-man.glsl\": [\n\t\t\"./src/routes/fractal/shaders/julia-and-man.glsl\",\n\t\t20\n\t],\n\t\"./julia-set.glsl\": [\n\t\t\"./src/routes/fractal/shaders/julia-set.glsl\",\n\t\t21\n\t],\n\t\"./mandelbrot-set.glsl\": [\n\t\t\"./src/routes/fractal/shaders/mandelbrot-set.glsl\",\n\t\t22\n\t],\n\t\"./newton-fractal.glsl\": [\n\t\t\"./src/routes/fractal/shaders/newton-fractal.glsl\",\n\t\t23\n\t],\n\t\"./ray-tracing.glsl\": [\n\t\t\"./src/routes/fractal/shaders/ray-tracing.glsl\",\n\t\t24\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/routes/fractal/shaders lazy recursive ^\\\\.\\\\/.*\\\\.glsl$\";\nmodule.exports = webpackAsyncContext;","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./webgl2-renderer.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!./webgl2-renderer.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./webgl2-renderer.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import {BufferObject} from \"./buffer\"\n\ntype GLSizeOrData = number | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array |\nUint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null\n\nconst _gl:WebGL2RenderingContext = document.createElement('canvas').getContext(\"webgl2\") as any\n\ntype ProgramOptions<Attributes extends string, Uniforms extends string> = {\n    gl:WebGL2RenderingContext,\n    vsSource:string,\n    fsSource:string,\n    attributes:Record<Attributes,AttributeDefinition>\n    uniforms:Record<Uniforms,number|number[]|Float32Array>,\n}\n\nconst shaderChunks = {\n    fbm: require(\"./shader-chunks/fbm.glsl\").default,\n    hsl2rgb: require(\"./shader-chunks/hsl2rgb.glsl\").default,\n    noise: require(\"./shader-chunks/noise.glsl\").default,\n    complex: require(\"./shader-chunks/complex.glsl\").default,\n}\n\nfunction shaderPreprocessor(source:string){\n    return source.replace(/\\#include\\s+\\<([a-z0-9A-Z_]+)\\>;?/g, (_, name)=>{\n        return shaderChunks[name] || \"\"\n    })\n}\n\nfunction createShaderError(source:string, errLog:string){\n    const matches = errLog.match(/^ERROR\\: (\\d+)\\:(\\d+)\\:/)\n    if(matches){\n        const splitedSource = source.split(/\\n/g)\n        const errPos = Number(matches[2])\n        console.log(errPos, splitedSource.slice(errPos-1, errPos+1).join(\"\\n\"))\n    }\n    return new Error(errLog)\n}\n\nexport function createWebgl2Program<Attributes extends string, Uniforms extends string>(options:ProgramOptions<Attributes,Uniforms>){\n\n    const {\n        gl,\n        vsSource,\n        fsSource,\n        attributes,\n        uniforms,\n    } = options\n\n    const program = gl.createProgram()\n\n    const vs = gl.createShader(gl.VERTEX_SHADER)\n    gl.shaderSource(vs,shaderPreprocessor(vsSource))\n\n    const fs = gl.createShader(gl.FRAGMENT_SHADER)\n    gl.shaderSource(fs,shaderPreprocessor(fsSource))\n\n    gl.compileShader(vs)\n    gl.compileShader(fs)\n\n    {\n        gl.attachShader(program,vs)\n        const errLog = gl.getShaderInfoLog(vs)\n        gl.deleteShader(vs)\n        if(errLog){\n            throw createShaderError(vsSource, errLog)\n        }\n    }\n\n    {\n        gl.attachShader(program,fs)\n        const errLog = gl.getShaderInfoLog(fs)\n        gl.deleteShader(fs)\n        if(errLog){\n            throw createShaderError(fsSource, errLog)\n        }\n    }\n\n    gl.linkProgram(program)\n    \n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n        const lastError = gl.getProgramInfoLog(program);\n        throw new Error(lastError);\n\n    }\n\n    gl.useProgram(program)\n    \n    const vao = gl.createVertexArray()\n\n    // gl.enable(gl.SAMPLE_COVERAGE);\n    // gl.sampleCoverage(1, false);\n\n    // console.log(gl.getError())\n\n    // const attrs:Map<string,AttributeDefinition> = new Map()\n    // function addAttribute(name:string,type:AttrType,size:1|2|3|4,stride:number,offset:number){\n    //     const location = gl.getAttribLocation(this.program,name)\n    //     attrs.set(name,{\n    //         location,\n    //         type,\n    //         size,\n    //         stride,\n    //         offset,\n    //     })\n    // }\n\n    const setUniformByValue = makeUniformSetter(program)\n\n    for(let name in uniforms){\n        const value = uniforms[name]\n        setUniformByValue(gl,name,value)\n    }\n\n    function init(){\n\n        //init draw\n        gl.clearColor(1, 1, 1, 1);\n        gl.enable(gl.BLEND)\n        gl.enable(gl.CULL_FACE)\n        gl.enable(gl.DEPTH_TEST)\n        gl.cullFace(gl.BACK)\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n        //init vao\n        gl.bindVertexArray(vao)\n        for(let name in attributes){\n            const attr = attributes[name]\n            attr.location = attr.location || gl.getAttribLocation(program, name)\n            gl.enableVertexAttribArray(attr.location)\n            gl.vertexAttribPointer(attr.location,attr.size,attr.type,false,attr.stride,attr.offset)\n        }\n    }\n\n    function draw(mode:DrawMode, bufferObject: BufferObject){\n        gl.clear(gl.DEPTH_BUFFER_BIT)\n        gl.clear(gl.COLOR_BUFFER_BIT)\n        gl.drawElements(mode,bufferObject.byteLength,gl.UNSIGNED_BYTE,0)\n    }\n        \n    return {\n        program,\n        draw,\n        bind(){\n            gl.useProgram(program)\n            gl.bindVertexArray(vao)\n        },\n        unbind(){\n            gl.bindVertexArray(null)\n        },\n        init,\n        uniforms: new Proxy(uniforms, {\n            set(_target, key: Uniforms, value: number|number[]){\n                setUniformByValue(gl,key,value)\n                return true\n            }\n        }),\n        dispose(){\n            gl.deleteProgram(program)\n            gl.deleteVertexArray(vao)\n        }\n    }\n}\n\nexport enum DrawMode {\n    lines = _gl.LINES,\n    line_strip = _gl.LINE_STRIP,\n    line_loop = _gl.LINE_LOOP,\n    triangle = _gl.TRIANGLES,\n    triangle_strip = _gl.TRIANGLE_STRIP,\n    triangle_fan = _gl.TRIANGLE_FAN,\n}\n\n// export enum UniformType {\n//     uniform1ui=\"uniform1ui\",\n//     uniform2ui=\"uniform2ui\",\n//     uniform3ui=\"uniform3ui\",\n//     uniform4ui=\"uniform4ui\",\n//     uniform1uiv=\"uniform1uiv\",\n//     uniform2uiv=\"uniform2uiv\",\n//     uniform3uiv=\"uniform3uiv\",\n//     uniform4uiv=\"uniform4uiv\",\n//     uniformMatrix2x3fv=\"uniformMatrix2x3fv\",\n//     uniformMatrix3x2fv=\"uniformMatrix3x2fv\",\n//     uniformMatrix2x4fv=\"uniformMatrix2x4fv\",\n//     uniformMatrix4x2fv=\"uniformMatrix4x2fv\",\n//     uniformMatrix3x4fv=\"uniformMatrix3x4fv\",\n//     uniformMatrix4x3fv=\"uniformMatrix4x3fv\",\n//     uniformBlockBinding=\"uniformBlockBinding\",\n//     uniform1f=\"uniform1f\",\n//     uniform1fv=\"uniform1fv\",\n//     uniform1i=\"uniform1i\",\n//     uniform1iv=\"uniform1iv\",\n//     uniform2f=\"uniform2f\",\n//     uniform2fv=\"uniform2fv\",\n//     uniform2i=\"uniform2i\",\n//     uniform2iv=\"uniform2iv\",\n//     uniform3f=\"uniform3f\",\n//     uniform3fv=\"uniform3fv\",\n//     uniform3i=\"uniform3i\",\n//     uniform3iv=\"uniform3iv\",\n//     uniform4f=\"uniform4f\",\n//     uniform4fv=\"uniform4fv\",\n//     uniform4i=\"uniform4i\",\n//     uniform4iv=\"uniform4iv\",\n//     uniformMatrix2fv=\"uniformMatrix2fv\",\n//     uniformMatrix3fv=\"uniformMatrix3fv\",\n//     uniformMatrix4fv=\"uniformMatrix4fv\",\n// }\n\nexport enum AttrType {\n    byte = _gl.BYTE,\n    short = _gl.SHORT,\n    unsigned_byte = _gl.UNSIGNED_BYTE,\n    unsigned_short = _gl.UNSIGNED_SHORT,\n    float = _gl.FLOAT,\n    half_float = _gl.HALF_FLOAT,\n}\n\ntype AttributeDefinition = {\n    location?:number, //location in vao, 0~gl.MAX_ATTRIBUTE\n    type:AttrType,\n    size:1|2|3|4,\n    stride:number,\n    offset:number,\n}\n\nfunction makeUniformSetter(program:WebGLProgram){\n    const setters = new Map<WebGLUniformLocation,Function>()\n    return function setUniformByValue(gl:WebGL2RenderingContext, key:string, value:number|number[]|Float32Array){\n        if(!setters.has(key)){\n            const loc = gl.getUniformLocation(program,key)\n            let setter = guessType(gl, loc, value)\n            setters.set(key, setter)\n        }\n        const setter = setters.get(key)\n        setter(value)\n    }\n}\n\nfunction guessType(gl:WebGL2RenderingContext, loc:WebGLUniformLocation,value:number|number[]|Float32Array){\n    if(Array.isArray(value) || value instanceof Float32Array){\n        switch(value.length){\n            case 4:{\n                return value=>gl.uniform4fv(loc,value)\n            }\n            case 3:{\n                return value=>gl.uniform3fv(loc,value)\n            }\n            case 2:{\n                return value=>gl.uniform2fv(loc,value)\n            }\n            case 16:{\n                return value=>gl.uniformMatrix4fv(loc,true,value)\n            }\n            case 9:{\n                return value=>gl.uniformMatrix3fv(loc,true,value)\n            }\n            default:{\n                return value=>gl.uniform1fv(loc,value)\n            }\n        }\n    }else{\n        return value=>gl.uniform1f(loc,value)\n    }\n}","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as React from \"react\";\nimport { createWebgl2Program, AttrType } from \"../../services/webgl/program\";\nimport { fromEvent } from \"rxjs\";\nimport { debounceTime } from \"rxjs/operators\";\n// import * as Hammer from \"hammerjs\"\nimport \"./webgl2-renderer.css\";\nimport { mat4, vec3 } from \"gl-matrix\";\nimport { createWebgl2BufferObject } from \"../../services/webgl/buffer\";\n\n// import \"webgl2\"\n///<reference path=\"../../../node_modules/@types/webgl2/index.d.ts\" />\n\ntype Props = {};\n\nenum ShaderType {\n  twod,\n  threed,\n}\nconst shaders: [string, ShaderType][] = [\n  [\"mandelbrot-set\" as const, ShaderType.twod],\n  [\"julia-set\" as const, ShaderType.threed],\n  [\"burning-ship\" as const, ShaderType.twod],\n  [\"julia-and-man\" as const, ShaderType.twod],\n  [\"newton-fractal\" as const, ShaderType.twod],\n  [\"ray-tracing\" as const, ShaderType.threed],\n];\n\nconst vertexShader = `#version 300 es\nprecision highp float;\nuniform mat4 projectionMatrix;\nuniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nin vec3 position;\nin vec2 uv;\nout vec3 vPos;\nout vec2 vUv;\n\nvoid main(){\n    vPos = position;\n    vUv = uv;\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n}\n`;\n\nconst isMobile = window.innerWidth < 1068;\n\nconst HEIGHT = isMobile ? window.innerWidth : 720;\nconst WIDTH = isMobile ? window.innerWidth : 720;\n\nexport default function WebglRenderer(props: Props) {\n  const canvasRef = React.useRef<HTMLCanvasElement>();\n\n  const editorRef = React.useRef<HTMLDivElement>();\n\n  const coordinateDisplayRef = React.useRef<HTMLSpanElement>();\n\n  const [fsName, setShaderName] = React.useState(() => {\n    const urlSearch = new URLSearchParams(location.search);\n    const urlShader = urlSearch.get(\"shader\");\n    return urlShader || shaders[0][0];\n  });\n\n  React.useEffect(() => {\n    const sub = fromEvent(window, \"scroll\")\n      .pipe(debounceTime(500))\n      .subscribe((e) => {\n        if (canvasRef.current && window.innerWidth > 768) {\n          const canvas = canvasRef.current;\n          // const bcr = canvas.getBoundingClientRect()\n          canvas.style.top = window.scrollY + \"px\";\n        }\n      });\n    return () => sub.unsubscribe();\n  }, []);\n\n  const [fragmentShader, setShader] = React.useState(null);\n\n  React.useEffect(() => {\n    import(\"./shaders/\" + fsName + \".glsl\").then((res) => {\n      setShader(res.default);\n      if (editorRef.current) {\n        editorRef.current.innerText = res.default;\n      }\n    });\n  }, [fsName]);\n\n  const state = React.useMemo(\n    () => ({\n      zoom: 1,\n      translate: [0, 0],\n      paused: false,\n      mouse: [0, 0],\n    }),\n    []\n  );\n\n  const [error, setError] = React.useState(null as null | Error);\n\n  React.useEffect(() => {\n    const canvas = canvasRef.current as HTMLCanvasElement;\n    const subs = [];\n    const shaderConfig = shaders.find((x) => x[0] === fsName);\n    const shaderType = (shaderConfig && shaderConfig[1]) || ShaderType.twod;\n\n    const onwheel = (e: MouseWheelEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (e.ctrlKey) {\n        const offsetX = e.offsetX; //* devicePixelRatio\n        const offsetY = HEIGHT - e.offsetY; // * devicePixelRatio\n        const factor = (100 + e.deltaY) / 100;\n        if (shaderType === ShaderType.twod) {\n          state.translate[0] =\n            (state.translate[0] + offsetX) / factor - offsetX;\n          state.translate[1] =\n            (state.translate[1] + offsetY) / factor - offsetY;\n        }\n        state.zoom *= factor;\n      } else {\n        state.translate[0] += e.deltaX;\n        state.translate[1] -= e.deltaY;\n      }\n    };\n    canvas.addEventListener(\"wheel\", onwheel);\n    subs.push(() => {\n      canvas.removeEventListener(\"wheel\", onwheel);\n    });\n\n    const onclick = () => {\n      state.paused = !state.paused;\n    };\n    canvas.addEventListener(\"click\", onclick);\n    subs.push(() => {\n      canvas.removeEventListener(\"click\", onclick);\n    });\n\n    // const hammer = new Hammer(canvas, {\n    //     enable:true,\n    //     recognizers:[\n    //         [Hammer.Pan],\n    //         [Hammer.Pinch],\n    //     ]\n    // })\n    // hammer.on(\"tap\",e=>{\n    //     state.paused = !state.paused\n    // })\n    // hammer.on(\"pinch\",e=>{\n    //     e.preventDefault()\n    //     state.zoom = e.scale\n    // })\n\n    const updateMousePosition = (offsetX: number, offsetY: number) => {\n      const x =\n        ((offsetX + state.translate[0]) / WIDTH) * state.zoom * 2.0 - 1.0;\n      const y =\n        ((offsetY + state.translate[1]) / HEIGHT) * state.zoom * 2.0 - 1.0;\n      state.mouse[0] = x;\n      state.mouse[1] = y;\n      coordinateDisplayRef &&\n        coordinateDisplayRef.current &&\n        (coordinateDisplayRef.current.innerHTML = `${x.toLocaleString(\"zh-CN\", {\n          maximumFractionDigits: 2,\n          minimumFractionDigits: 2,\n        })},${y.toLocaleString(\"zh-CN\", {\n          maximumFractionDigits: 2,\n          minimumFractionDigits: 2,\n        })}`);\n    };\n\n    const onpointermove = (e: PointerEvent) => {\n      const offsetX = e.offsetX; // * devicePixelRatio\n      const offsetY = HEIGHT - e.offsetY; // * devicePixelRatio\n      updateMousePosition(offsetX, offsetY);\n    };\n    const onpointerenter = (e: PointerEvent) => {\n      canvas.setPointerCapture(e.pointerId);\n    };\n    const onpointerleave = (e: PointerEvent) => {\n      canvas.releasePointerCapture(e.pointerId);\n    };\n    canvas.addEventListener(\"pointerenter\", onpointerenter);\n    canvas.addEventListener(\"pointerleave\", onpointerleave);\n    canvas.addEventListener(\"pointermove\", onpointermove);\n    subs.push(() => {\n      canvas.removeEventListener(\"pointerenter\", onpointerenter);\n      canvas.removeEventListener(\"pointerleave\", onpointerleave);\n      canvas.removeEventListener(\"pointermove\", onpointermove);\n    });\n\n    return () => {\n      subs.forEach((x) => x());\n    };\n  }, [fsName]);\n\n  React.useEffect(() => {\n    const canvas = canvasRef.current as HTMLCanvasElement;\n    if (!fragmentShader) {\n      return undefined;\n    }\n    if (canvas) {\n      const glattr = {\n        alpha: true,\n        depth: true,\n        antialias: true,\n        premultipliedAlpha: false,\n        devicePixelRatio: window.devicePixelRatio,\n      } as WebGLContextAttributes;\n\n      let gl = canvas.getContext(\"webgl2\", glattr) as WebGL2RenderingContext;\n\n      if (!gl) {\n        gl = canvas.getContext(\n          \"experimental-webgl2\",\n          glattr\n        ) as WebGL2RenderingContext;\n      }\n\n      // const xSegments = Math.floor(WIDTH / 100)\n      // const ySegments = Math.floor(HEIGHT / 100)\n      const xSegments = 10;\n      const ySegments = 10;\n\n      const vertexNumber = (xSegments + 1) * (ySegments + 1);\n\n      /**\n       * @property position vec3  3\n       * @property uv vec2  2\n       */\n      const vboDataStride = 3 + 2;\n      const vboData = new Float32Array(vertexNumber * vboDataStride);\n\n      for (let j = 0; j <= ySegments; j++) {\n        for (let i = 0; i <= xSegments; i++) {\n          let offset = (j * (xSegments + 1) + i) * vboDataStride;\n          vboData[offset] = i;\n          vboData[offset + 1] = j;\n          vboData[offset + 2] = 1;\n          vboData[offset + 3] = i / xSegments;\n          vboData[offset + 4] = j / ySegments;\n        }\n      }\n\n      const eboData = makePlaneGeometryEBO(xSegments, ySegments);\n\n      //TODO is Here\n\n      const projectionMatrix = mat4.create();\n      mat4.perspective(\n        projectionMatrix,\n        Math.acos(WIDTH / HEIGHT) / 2,\n        WIDTH / HEIGHT,\n        0.1,\n        1000\n      );\n\n      const cameraPosition = vec3.create();\n      vec3.normalize(cameraPosition, [50, 50, 50]);\n      const cameraUp = vec3.create();\n      vec3.normalize(cameraPosition, [-1, -1, 1]);\n\n      const viewMatrix = mat4.create();\n      mat4.lookAt(viewMatrix, cameraPosition, [0, 0, 0], cameraUp);\n\n      const modelMatrix = mat4.create();\n      mat4.fromTranslation(modelMatrix, [0, 0, 0]);\n\n      const result = mat4.create();\n\n      mat4.multiply(result, viewMatrix, modelMatrix);\n      mat4.multiply(result, projectionMatrix, result);\n\n      console.log(\n        `[\\n${result.slice(0, 4)}\\n${result.slice(4, 8)}\\n${result.slice(\n          8,\n          12\n        )}\\n${result.slice(12, 16)}\\n]`\n      );\n\n      setError(null);\n      try {\n        const bo = createWebgl2BufferObject({\n          gl,\n          vboData,\n          eboData,\n        });\n\n        const program = createWebgl2Program({\n          gl,\n          vsSource: vertexShader,\n          fsSource: fragmentShader,\n          attributes: {\n            position: {\n              type: AttrType.float,\n              size: 3,\n              stride: vboDataStride * Float32Array.BYTES_PER_ELEMENT,\n              offset: 0,\n            },\n            uv: {\n              type: AttrType.float,\n              size: 2,\n              stride: vboDataStride * Float32Array.BYTES_PER_ELEMENT,\n              offset: Float32Array.BYTES_PER_ELEMENT * 3,\n            },\n          },\n          uniforms: {\n            // projectionMatrix:projectionMatrix,\n            // modelMatrix,\n            // viewMatrix,\n            projectionMatrix: [\n              2 / xSegments,\n              0,\n              0,\n              -1,\n              0,\n              2 / ySegments,\n              0,\n              -1,\n              0,\n              0,\n              1,\n              -0.5,\n              0,\n              0,\n              0,\n              1,\n            ],\n            viewMatrix: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\n            modelMatrix: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\n            resolution: [WIDTH, HEIGHT],\n            time: 0,\n            params: params,\n            zoom: state.zoom,\n            translate: state.translate,\n            mouse: state.mouse,\n          },\n        });\n\n        let lastRenderTime = 0;\n        let totalPauseTime = 0;\n\n        program.bind();\n\n        bo.bind();\n\n        program.init();\n\n        let isFirstLoop = true;\n\n        function loop(timeValue) {\n          program.uniforms.translate = state.translate;\n          program.uniforms.zoom = state.zoom;\n          program.uniforms.params = params;\n          let time = timeValue - totalPauseTime;\n          program.uniforms.time = time;\n          // program.uniforms.projectionMatrix = projectionMatrix\n          if (state.paused) {\n            totalPauseTime += timeValue - lastRenderTime;\n          } else {\n            program.uniforms.mouse = state.mouse;\n          }\n          lastRenderTime = timeValue;\n          program.draw(gl.TRIANGLES, bo);\n          if (isFirstLoop) {\n            const buf = new Uint8Array(4);\n            gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, buf);\n            console.log([...buf]);\n            isFirstLoop = false;\n          }\n          animeHandle = requestAnimationFrame(loop);\n        }\n        let animeHandle = requestAnimationFrame(loop);\n        return () => {\n          cancelAnimationFrame(animeHandle);\n          program.dispose();\n          bo.dispose();\n        };\n      } catch (e) {\n        setError(e);\n      }\n    }\n  }, [fragmentShader]);\n\n  const params = React.useMemo(() => [1, 0, 0], []);\n\n  const [magicNumberState, setMagicNumberState] = React.useState(params);\n\n  return (\n    <>\n      <div id=\"canvas-left\">\n        <p>\n          一些看似复杂其实跟Hello World一样简单的东西, 没有用框架,\n          纯粹是为了学习webgl的API做的轮子.\n          编辑下面文本框中的代码可以直接更新图像.\n        </p>\n        <div\n          onChange={(e) => {\n            const el = e.target as HTMLInputElement;\n            const shader = el.value as any;\n            setShaderName(shader);\n            const newURL = new URL(location.href);\n            newURL.search = \"?shader=\" + shader;\n            history.pushState(null, document.title, newURL.href);\n          }}\n        >\n          <h4>Shaders</h4>\n          {shaders.map((x) => {\n            const [name] = x;\n            return (\n              <label style={{ display: \"block\" }} key={name}>\n                <input\n                  defaultChecked={fsName === name}\n                  type=\"radio\"\n                  key={name}\n                  name=\"fsName\"\n                  value={name}\n                />\n                {name}\n              </label>\n            );\n          })}\n        </div>\n        <div>\n          <h4>Parameters</h4>\n          {params.map((x, i) => {\n            return (\n              <label style={{ display: \"block\" }} key={i}>\n                <span style={{ marginRight: 2 }}>{[\"x\", \"y\", \"z\"][i]}</span>\n                <input\n                  type=\"range\"\n                  value={String(magicNumberState[i])}\n                  max={500}\n                  min={0}\n                  step={1}\n                  onChange={(e) => {\n                    params[i] = e.currentTarget.valueAsNumber;\n                    setMagicNumberState([...params]);\n                  }}\n                />\n                <input\n                  type=\"number\"\n                  value={String(magicNumberState[i])}\n                  max={500}\n                  min={0}\n                  step={1}\n                  onChange={(e) => {\n                    params[i] = e.currentTarget.valueAsNumber;\n                    setMagicNumberState([...params]);\n                  }}\n                />\n              </label>\n            );\n          })}\n        </div>\n        <div>\n          <p>\n            mouse is currently at (<span ref={coordinateDisplayRef}></span>)\n          </p>\n        </div>\n        {error ? <pre style={{ color: \"red\" }}>{error.message}</pre> : null}\n        <pre>\n          <code\n            ref={editorRef}\n            contentEditable\n            onFocus={(e) => {}}\n            onInput={(e) => {\n              if (e.target[\"timer\"]) {\n                clearTimeout(e.target[\"timer\"]);\n                e.target[\"timer\"] = null;\n              } else {\n                e.target[\"timer\"] = setTimeout(() => {\n                  setShader(e.currentTarget.innerText);\n                }, 2000);\n              }\n            }}\n          />\n        </pre>\n      </div>\n      <div id=\"canvas-right\">\n        <canvas\n          style={{\n            position: \"relative\",\n            // background:\"red\",\n            width: WIDTH,\n            height: HEIGHT,\n            top: 0,\n            transition: \"top .4s ease\",\n            // top:0,\n          }}\n          height={HEIGHT * devicePixelRatio}\n          width={WIDTH * devicePixelRatio}\n          ref={canvasRef}\n        />\n      </div>\n    </>\n  );\n}\n\nfunction makePlaneGeometryEBO(xSegments: number, ySegments: number) {\n  let index = new Uint8Array(xSegments * ySegments * 6);\n  let rowSize = xSegments + 1;\n  let rowCount = ySegments + 1;\n  for (let y = 0; y < rowCount - 1; y++) {\n    for (let x = 0; x < rowSize - 1; x++) {\n      const i = y * rowSize + x;\n      /**\n       *  i+rowSize   i+rowSize+1\n       *  i           i+1\n       */\n      index.set(\n        [i, i + 1, i + rowSize + 1, i + rowSize + 1, i + rowSize, i],\n        (i - y) * 6\n      );\n    }\n  }\n  return index;\n}\n","\nexport type BufferObjectOption = {\n    gl:WebGL2RenderingContext, \n    vboData: ArrayBufferView, \n    eboData: ArrayBufferView,\n}\n\nexport interface BufferObject {\n    dispose:()=>void,\n    bind:()=>void,\n    unbind:()=>void,\n    byteLength: number,\n}\n\nexport function createWebgl2BufferObject({gl,vboData,eboData}:BufferObjectOption):BufferObject{\n\n\n    const vbo = gl.createBuffer()\n\n    const elementArrayBuffer = gl.createBuffer()\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,elementArrayBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, eboData, gl.STATIC_DRAW)\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo)\n    gl.bufferData(gl.ARRAY_BUFFER, vboData, gl.STATIC_DRAW)\n\n    unbind()\n\n    function unbind(){\n        gl.bindBuffer(gl.ARRAY_BUFFER,null)\n        gl.bindVertexArray(null)\n    }\n\n    return {\n        dispose(){\n            gl.deleteBuffer(vbo)\n        },\n        bind(){\n            gl.bindBuffer(gl.ARRAY_BUFFER,vbo)\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,elementArrayBuffer)\n        },\n        unbind,\n        byteLength:eboData.byteLength\n    }\n}","export default \"\\nvec2 complexExp(vec2 z){\\n    return exp(z.x) * vec2(\\n        cos(z.y),\\n        sin(z.y)\\n    );\\n}\\n\\nvec2 polarForm(vec2 z){\\n    float rad = atan(z.y,z.x); //atan is -pi ~ pi\\n    float l = length(z);\\n    return vec2(l,rad);\\n}\\n\\nvec2 complexPow(vec2 z, float power){\\n    vec2 pz = polarForm(z);\\n    return pow(pz.x, power) * vec2(\\n        cos(pz.y * power),\\n        sin(pz.y * power)\\n    );\\n}\\n\\nvec2 complexDiv(vec2 z1, vec2 z2){\\n    vec2 pz1 = polarForm(z1);\\n    vec2 pz2 = polarForm(z2);\\n    return pz1.x / pz2.x * vec2(\\n        cos(pz1.y - pz2.y),\\n        sin(pz1.y - pz2.y)\\n    );\\n}\"","export default \"\\n\\nfloat fbm(vec2 uv){\\n\\tfloat f;\\n\\tmat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\\n\\tf  = 0.5000*noise( uv ); uv = m*uv;\\n\\tf += 0.2500*noise( uv ); uv = m*uv;\\n\\tf += 0.1250*noise( uv ); uv = m*uv;\\n\\tf += 0.0625*noise( uv ); uv = m*uv;\\n\\tf = 0.5 + 0.5*f;\\n\\treturn f;\\n}\\n\\nfloat fbm_light(vec2 uv){\\n\\tfloat f;\\n\\tmat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\\n\\tf  = 0.5000*noise( uv ); uv = m*uv;\\n\\tf += 0.2500*noise( uv ); uv = m*uv;\\n\\t// f += 0.1250*noise( uv ); uv = m*uv;\\n\\t// f += 0.0625*noise( uv ); uv = m*uv;\\n\\tf = 0.5 + 0.5*f;\\n\\treturn f;\\n}\"","export default \"\\nvec3 hsl2rgb( in vec3 c ){\\n    vec3 rgb = clamp(\\n        abs(\\n            mod(\\n                c.x*6.0+vec3(0.0,4.0,2.0),\\n                6.0\\n            )-3.0\\n        )-1.0,\\n        0.0,\\n        1.0 \\n    );\\n    rgb = rgb*rgb*(3.0-2.0*rgb);\\n    return c.z * mix(vec3(1.0), rgb, c.y);\\n}\"","export default \"\\n/**\\n * @author https://www.shadertoy.com/view/XsXSWS\\n */\\n\\nvec2 hash(vec2 p){\\n\\tp = vec2( dot(p,vec2(127.1,311.7)),\\n\\t\\t\\t dot(p,vec2(269.5,183.3)) );\\n\\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\\n}\\n\\nfloat noise( in vec2 p ){\\n\\tconst float K1 = 0.366025404; // (sqrt(3)-1)/2;\\n\\tconst float K2 = 0.211324865; // (3-sqrt(3))/6;\\n\\t\\n\\tvec2 i = floor( p + (p.x+p.y)*K1 );\\n\\t\\n\\tvec2 a = p - i + (i.x+i.y)*K2;\\n\\tvec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0);\\n\\tvec2 b = a - o + K2;\\n\\tvec2 c = a - 1.0 + 2.0*K2;\\n\\t\\n\\tvec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\\n\\t\\n\\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\\n\\t\\n\\treturn dot( n, vec3(70.0) );\\n}\""],"sourceRoot":""}